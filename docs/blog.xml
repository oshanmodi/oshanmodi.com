<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Oshan Modi</title>
<link>https://oshanmodi.com/blog.html</link>
<atom:link href="https://oshanmodi.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>data, dogs and rest</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Fri, 12 May 2023 18:30:00 GMT</lastBuildDate>
<item>
  <title>Intro to Fast.Ai</title>
  <dc:creator>Oshan Modi</dc:creator>
  <link>https://oshanmodi.com/posts/04-fastai-lesson1-intro/index.html</link>
  <description><![CDATA[ 




<p>A summary of the first lesson of the fastai v1 course.</p>
<p><img src="https://oshanmodi.com/posts/04-fastai-lesson1-intro/fastai1.png" class="img-fluid"></p>
<section id="fast.ai" class="level3">
<h3 class="anchored" data-anchor-id="fast.ai">fast.ai</h3>
<p>fast.ai is an API built on top of pytorch that provides easy implementation of machine learning functions for most practical usecases, without having to worry about any of the boilerplate code. Not just that, it also enables customisations in all the right places.</p>
<p><em>This is my one of many attempts at completing the fastai course. I have been at it since the first iteration of the course, back in 2016.</em></p>
<p>In this blogpost we talk about the contents of the <a href="https://course.fast.ai/Lessons/lesson1.html">first lesson</a> of the course.</p>
<p>In the first lesson Jeremy explains the steps involved in training an image classifier using the <code>datablock</code> api. <code>datablock</code>s are building blocks for model development in the <code>fastai</code> universe and come with several inbuilt methods that expedite model training and exploration.</p>
<p>Steps to train an image classifer using <code>datablock</code> and <code>resnet18</code> architecture:</p>
<ol type="1">
<li>Create a datablock api</li>
<li>Pass the path of the data to dataloaders method of the datablock</li>
<li>Create learner with <code>resnet18</code> architecture and the dataloader created in step2</li>
<li><code>fine_tune</code> the learner</li>
<li>export learner as pickle for inferencing.</li>
</ol>
<p>Let’s understand the inputs to the datablock api -</p>
<ol type="1">
<li>datatype - input object type, label type</li>
<li>function to identify the label</li>
<li>item transformations</li>
<li>batch transformations</li>
<li>splitter - function to split to training and validation datasets</li>
<li>get_items - function to obtain the input objects</li>
</ol>
<p><strong>There are task specific <code>dataloader</code>s built on top of <code>datablock</code>s which further simply data load, eg. Segmentation dataloaders, Tabular dataloader, collab dataloaders, and more.</strong></p>


</section>

 ]]></description>
  <category>fastai</category>
  <guid>https://oshanmodi.com/posts/04-fastai-lesson1-intro/index.html</guid>
  <pubDate>Fri, 12 May 2023 18:30:00 GMT</pubDate>
  <media:content url="https://oshanmodi.com/posts/04-fastai-lesson1-intro/fastai2.png" medium="image" type="image/png" height="51" width="144"/>
</item>
<item>
  <title>COVID-19 in Europe - Full Breakdown</title>
  <dc:creator>Oshan Modi</dc:creator>
  <link>https://oshanmodi.com/posts/03-covid19-in-europe/index.html</link>
  <description><![CDATA[ 




<p><img src="https://oshanmodi.com/posts/03-covid19-in-europe/covid19-3.png" class="img-fluid"></p>
<p>A dashboard to visualise covid cases across europe.</p>
<p>Checkout the app <a href="https://datayogi.shinyapps.io/Shiny-CovidDashboard/">here</a>.</p>



 ]]></description>
  <category>shiny</category>
  <category>Dashboard</category>
  <guid>https://oshanmodi.com/posts/03-covid19-in-europe/index.html</guid>
  <pubDate>Sat, 06 Nov 2021 18:30:00 GMT</pubDate>
  <media:content url="https://oshanmodi.com/posts/03-covid19-in-europe/covid19-1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Analytics Playground</title>
  <dc:creator>Oshan Modi</dc:creator>
  <link>https://oshanmodi.com/posts/02-analytics-playground/index.html</link>
  <description><![CDATA[ 




<p><img src="https://oshanmodi.com/posts/02-analytics-playground/analyticsplayground1.png" class="img-fluid"></p>
<p>Checkout the app <a href="https://datayogi.shinyapps.io/PowerBIDemoApp/">here</a>.</p>
<p>This R Shiny interactive application is a powerful tool designed to facilitate model training and comparison. It allows users to explore various machine learning models and comprehend the impact of different parameters on the model’s performance.</p>
<p>Key features of the R Shiny application include:</p>
<ul>
<li><p><strong>Model Selection</strong>: Users can choose from a wide range of machine learning algorithms available in the application. Common options include linear regression, decision trees, random forests, support vector machines, and neural networks, among others.</p></li>
<li><p><strong>Model Training and Evaluation</strong>: The application allows users to train the selected models on the provided dataset. They can specify training parameters, such as the train-test split ratio or cross-validation folds, to ensure robust model performance assessment.</p></li>
<li><p><strong>Parameter Tuning</strong>: Users can experiment with different parameter settings for each model to understand their impact on performance metrics, such as accuracy, precision, recall, or F1-score. The application provides interactive controls to adjust parameter values dynamically.</p></li>
<li><p><strong>Performance Comparison</strong>: The application provides visualizations and metrics to compare the performance of different models side by side. Users can observe how changes in parameters affect the models’ predictive power and choose the most suitable model for their specific task.</p></li>
<li><p><strong>Results Visualization</strong>: The application offers interactive visualizations, such as confusion matrices, ROC curves, precision-recall curves,</p></li>
</ul>



 ]]></description>
  <category>shiny</category>
  <category>Dashboard</category>
  <guid>https://oshanmodi.com/posts/02-analytics-playground/index.html</guid>
  <pubDate>Sat, 14 Aug 2021 18:30:00 GMT</pubDate>
  <media:content url="https://oshanmodi.com/posts/02-analytics-playground/analyticsplayground1.png" medium="image" type="image/png" height="61" width="144"/>
</item>
<item>
  <title>HealthSpotter: Navigating Your Health with Ease</title>
  <dc:creator>Oshan Modi</dc:creator>
  <link>https://oshanmodi.com/posts/01-healthspotter/index.html</link>
  <description><![CDATA[ 




<p><img src="https://oshanmodi.com/posts/01-healthspotter/healthspotter1.png" class="img-fluid"></p>
<section id="healthspotter" class="level3">
<h3 class="anchored" data-anchor-id="healthspotter">HealthSpotter</h3>
<p>An application that lets you visualise the density of health centers around you. Only works for Australia at the moment. Check out the application <a href="https://datayogi.shinyapps.io/AustraliaHealthCareDemoApp/">here</a>.</p>


</section>

 ]]></description>
  <category>shiny</category>
  <category>Dashboard</category>
  <guid>https://oshanmodi.com/posts/01-healthspotter/index.html</guid>
  <pubDate>Mon, 30 Mar 2020 18:30:00 GMT</pubDate>
  <media:content url="https://oshanmodi.com/posts/01-healthspotter/healthspotter1.png" medium="image" type="image/png" height="78" width="144"/>
</item>
</channel>
</rss>
